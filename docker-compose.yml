services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    restart: always
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    command: >
      sh -c "poetry run python3 -m web.app.database &&
      poetry run gunicorn web.app.wsgi:app --bind 0.0.0.0:8000 --workers 3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network

  database:
    image: postgres:latest
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
